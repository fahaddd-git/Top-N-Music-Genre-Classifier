{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "standard-with-typescript"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react"
  ],
  "settings": {
    "react": {
        "version": "18"
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": "**/tsconfig.json"
      }
    }
  ],
  "rules": {
    /* typescript rules */
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/comma-dangle": ["error", {
      "arrays": "always-multiline",
      "imports": "always-multiline",
      "objects": "always-multiline"
    }],
    "@typescript-eslint/triple-slash-reference": "off",  // affects d.ts global type declarations
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/consistent-type-definitions": "off",  // allow mixing interface and type
    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
        "delimiter": "semi",
        "requireLast": true
      }
    }],

    /* javascript rules */
    "no-void": "error",
    "prefer-promise-reject-errors": "error",
    "no-unused-vars": "warn",

    /* react rules */
    "react/no-unstable-nested-components": ["error", { "allowAsProps": true }],

    /* formatting rules */
    "indent": ["error", 2],
    "quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "semi": ["error", "always"],
    "no-extra-semi": "error",
    "comma-dangle": ["error", "only-multiline"],
    "no-multi-spaces": ["error", { "ignoreEOLComments": true }],
    "max-len": ["error", { "code": 100 }],
    "linebreak-style": ["error", "unix"]
  }
}
